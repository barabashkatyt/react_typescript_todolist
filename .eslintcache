[{"F:\\work\\react_typescript_tutorial\\src\\index.tsx":"1","F:\\work\\react_typescript_tutorial\\src\\App.tsx":"2","F:\\work\\react_typescript_tutorial\\src\\components\\Navbar.tsx":"3","F:\\work\\react_typescript_tutorial\\src\\components\\TodoForm.tsx":"4","F:\\work\\react_typescript_tutorial\\src\\components\\TodoList.tsx":"5","F:\\work\\react_typescript_tutorial\\src\\pages\\AboutPage.tsx":"6","F:\\work\\react_typescript_tutorial\\src\\pages\\TodosPage.tsx":"7"},{"size":220,"mtime":1609248067616,"results":"8","hashOfConfig":"9"},{"size":547,"mtime":1609390089319,"results":"10","hashOfConfig":"9"},{"size":441,"mtime":1609392659289,"results":"11","hashOfConfig":"9"},{"size":978,"mtime":1609325422180,"results":"12","hashOfConfig":"9"},{"size":1238,"mtime":1609388624502,"results":"13","hashOfConfig":"9"},{"size":541,"mtime":1609390204830,"results":"14","hashOfConfig":"9"},{"size":1497,"mtime":1609389067591,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"169g444",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"F:\\work\\react_typescript_tutorial\\src\\index.tsx",[],["32","33"],"F:\\work\\react_typescript_tutorial\\src\\App.tsx",[],"F:\\work\\react_typescript_tutorial\\src\\components\\Navbar.tsx",[],"F:\\work\\react_typescript_tutorial\\src\\components\\TodoForm.tsx",[],"F:\\work\\react_typescript_tutorial\\src\\components\\TodoList.tsx",[],"F:\\work\\react_typescript_tutorial\\src\\pages\\AboutPage.tsx",[],"F:\\work\\react_typescript_tutorial\\src\\pages\\TodosPage.tsx",["34"],"import React, { useState, useEffect } from 'react'\r\nimport { TodoForm } from '../components/TodoForm'\r\nimport { TodoList } from '../components/TodoList'\r\nimport { ITodo } from '../interfaces'\r\n\r\n// or window.confirm()\r\ndeclare var confirm: (question: string) => boolean\r\n\r\nexport const TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[]\r\n    setTodos(saved)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false\r\n    }\r\n    // setTodos([newTodo, ...todos])\r\n    setTodos(prev => [newTodo, ...prev])\r\n  }\r\n\r\n  const toggleHandler = (id: number) => {\r\n    setTodos(prev =>\r\n      prev.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  const removeHandler = (id: number) => {\r\n    const shouldRemove = window.confirm(\"You really want to remove todo\")\r\n    if (shouldRemove) {\r\n      setTodos(prev => prev.filter(todo => todo.id !== id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TodoForm onAdd={addHandler} />\r\n\r\n      <TodoList\r\n        todos={todos}\r\n        onToggle={toggleHandler}\r\n        onRemove={removeHandler}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":13,"nodeType":"41","messageId":"42","endLine":7,"endColumn":51},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'confirm' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]